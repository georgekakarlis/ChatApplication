{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"sLA2BeA,EA3BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OAAIA,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EAEpD,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEC,MAAO,WAMpB,qBACEF,UAAU,UACVC,MAAO,CACLC,MAAO,QACPC,YAAa,OACbC,MAAO,QACPC,gBAAiB,WANrB,SASGX,EAAQY,QCeAC,EArCM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAad,EAAc,EAAdA,QAC7Be,GACHD,GAAeA,EAAYE,OAAOC,WAAajB,EAAQgB,OAAOC,SAEjE,OACE,sBAAKX,UAAU,cAAf,UACGS,GACC,qBACET,UAAU,iBACVC,MAAO,CACLW,gBAAiBlB,EAAQgB,QAAR,cAAyBhB,EAAQgB,OAAOG,OAAxC,QAItBnB,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EACnD,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEa,WAAYL,EAAuB,MAAQ,UAGtD,qBACET,UAAU,UACVC,MAAO,CACLC,MAAO,OACPG,gBAAiB,UACjBS,WAAYL,EAAuB,MAAQ,QAL/C,SAQGf,EAAQY,W,yBC4BJS,EAtDK,SAACC,GACnB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAQVC,EAAe,SAACC,GACpBA,EAAMC,iBAEN,IAAMlB,EAAOY,EAAMO,OAEfnB,EAAKV,OAAS,GAChB8B,YAAYL,EAAOD,EAAQ,CAAEd,SAG/Ba,EAAS,KAOX,OACE,uBAAMnB,UAAU,eAAe2B,SAAUL,EAAzC,UACE,uBACEtB,UAAU,gBACV4B,YAAY,oBACZV,MAAOA,EACPW,SA5Be,SAACN,GACpBJ,EAASI,EAAMO,OAAOZ,OAEtBa,YAASf,EAAOI,IA0BZO,SAAUL,IAEZ,uBAAOU,QAAQ,gBAAf,SACE,sBAAMhC,UAAU,eAAhB,SACE,cAACiC,EAAA,EAAD,CAAiBjC,UAAU,qBAG/B,uBACEkC,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHnC,MAAO,CAAEoC,QAAS,QAClBR,SAvBe,SAACN,GACpBG,YAAYL,EAAOD,EAAQ,CAAEkB,MAAOf,EAAMO,OAAOQ,MAAOhC,KAAM,MAsBnCiC,K,aAEzB,wBAAQL,KAAK,SAASlC,UAAU,cAAhC,SACE,cAACwC,EAAA,EAAD,CAAcxC,UAAU,oBC0BjByC,EA1EE,SAACzB,GAChB,IAAQ0B,EAA0C1B,EAA1C0B,MAAOC,EAAmC3B,EAAnC2B,WAAYC,EAAuB5B,EAAvB4B,SAAUC,EAAa7B,EAAb6B,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACrD,EAASsD,GAAV,OACzBF,EAAKG,OAAOC,KACV,SAACC,EAAQC,GAAT,OACED,EAAOE,YAAc3D,EAAQ0C,IAC3B,qBAEEpC,UAAU,eACVC,MAAO,CACLC,MAAO8C,EAAc,QAAU,OAC/BpC,gBACEuC,EAAOA,OAAOtC,QAAd,cAA+BsC,EAAOA,OAAOtC,OAA7C,OANN,eACeuC,QA6CvB,OAAKN,EAGH,sBAAK9C,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,gBAA6B8C,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMQ,QACnC,qBAAKtD,UAAU,gBAAf,SACG8C,EAAKG,OAAOC,KAAI,SAACC,GAAD,iBAAgBA,EAAOA,OAAOxC,kBAzChC,WACrB,IAAM4C,EAAOC,OAAOD,KAAKV,GAEzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GACpB,IAAM1D,EAAUmD,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAQ,GACnDJ,EAAcJ,IAAalD,EAAQgB,OAAOC,SAEhD,OACE,sBAA0BV,MAAO,CAAE0D,MAAO,QAA1C,UACE,qBAAK3D,UAAU,gBAAf,SACGgD,EACC,cAAC,EAAD,CAAWtD,QAASA,IAEpB,cAAC,EAAD,CACEA,QAASA,EACTc,YAAaqC,EAASa,OAI5B,qBACE1D,UAAU,gBACVC,MAAO,CACLE,YAAa6C,EAAc,OAAS,MACpClC,WAAYkC,EAAc,MAAQ,QAJtC,SAOGD,EAAmBrD,EAASsD,OAlBjC,cAAiBI,OAmClBQ,GACD,qBAAK3D,MAAO,CAAE4D,OAAQ,WACtB,qBAAK7D,UAAU,yBAAf,SACE,cAAC,EAAD,2BAAiBgB,GAAjB,IAAwBI,OAAQuB,UAbpB,yB,2CCQLmB,EA9DD,WACZ,MAAgC7C,mBAAS,IAAzC,mBAAON,EAAP,KAAiBoD,EAAjB,KACA,EAAgC9C,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBC,EAAjB,KACA,EAA0BhD,mBAAS,IAAnC,mBAAOiD,EAAP,KAAcC,EAAd,KAEM7C,EAAY,uCAAG,WAAO8C,GAAP,eAAAC,EAAA,6DACnBD,EAAE5C,iBAEI8C,EAAa,CACjB,aAXY,uCAYZ,YAAa3D,EACb,cAAeqD,GANE,kBAUXO,IAAMC,IAAI,kCAAmC,CACjDC,QAASH,IAXM,OAcjBI,aAAaC,QAAQ,WAAYhE,GACjC+D,aAAaC,QAAQ,WAAYX,GAEjCY,OAAOC,SAASC,SAChBX,EAAS,IAlBQ,kDAoBjBA,EAAS,gCApBQ,0DAAH,sDAwBlB,OACE,qBAAKnE,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,uBAAM2B,SAAUL,EAAhB,UACE,uBACEY,KAAK,OACLhB,MAAOP,EACPkB,SAAU,SAACuC,GAAD,OAAOL,EAAYK,EAAEtC,OAAOZ,QACtClB,UAAU,QACV4B,YAAY,WACZmD,UAAQ,IAEV,uBACE7C,KAAK,WACLhB,MAAO8C,EACPnC,SAAU,SAACuC,GAAD,OAAOH,EAAYG,EAAEtC,OAAOZ,QACtClB,UAAU,QACV4B,YAAY,WACZmD,UAAQ,IAEV,qBAAKC,MAAM,SAAX,SACE,wBAAQ9C,KAAK,SAASlC,UAAU,SAAhC,SACE,yDAIN,6BAAKkE,UCrCEe,G,OAfH,WACR,OAAKP,aAAaQ,QAAQ,YAEtB,cAAC,IAAD,CACIrB,OAAO,QACPsB,UAPM,uCAQNvC,SAAU8B,aAAaQ,QAAQ,YAC/BE,WAAYV,aAAaQ,QAAQ,YACjCG,eAAgB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,KAEhDC,aAAc,kBAAM,IAAIC,MAAM,yDAAyDC,UATjD,cAACC,EAAD,MCLlDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.105f80f3.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\n  if (message.attachments && message.attachments.length > 0) {\n    return (\n      <img\n        src={message.attachments[0].file}\n        alt=\"message-attachment\"\n        className=\"message-image\"\n        style={{ float: \"right\" }}\n      />\n    );\n  }\n\n  return (\n    <div\n      className=\"message\"\n      style={{\n        float: \"right\",\n        marginRight: \"18px\",\n        color: \"white\",\n        backgroundColor: \"#3B2A50\",\n      }}\n    >\n      {message.text}\n    </div>\n  );\n};\n\nexport default MyMessage;\n","const TheirMessage = ({ lastMessage, message }) => {\n  const isFirstMessageByUser =\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\n\n  return (\n    <div className=\"message-row\">\n      {isFirstMessageByUser && (\n        <div\n          className=\"message-avatar\"\n          style={{\n            backgroundImage: message.sender && `url(${message.sender.avatar})`,\n          }}\n        />\n      )}\n      {message.attachments && message.attachments.length > 0 ? (\n        <img\n          src={message.attachments[0].file}\n          alt=\"message-attachment\"\n          className=\"message-image\"\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\n        />\n      ) : (\n        <div\n          className=\"message\"\n          style={{\n            float: \"left\",\n            backgroundColor: \"#CABCDC\",\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\n          }}\n        >\n          {message.text}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TheirMessage;\n","import { useState } from \"react\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState(\"\");\n  const { chatId, creds } = props;\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    isTyping(props, chatId);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n\n    setValue(\"\");\n  };\n\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\n  };\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: \"none\" }}\n        onChange={handleUpload.bind(this)}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n","import MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport MessageForm from \"./MessageForm\";\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages } = props;\n\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) =>\n    chat.people.map(\n      (person, index) =>\n        person.last_read === message.id && (\n          <div\n            key={`read_${index}`}\n            className=\"read-receipt\"\n            style={{\n              float: isMyMessage ? \"right\" : \"left\",\n              backgroundImage:\n                person.person.avatar && `url(${person.person.avatar})`,\n            }}\n          />\n        )\n    );\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n\n      return (\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\n          <div className=\"message-block\">\n            {isMyMessage ? (\n              <MyMessage message={message} />\n            ) : (\n              <TheirMessage\n                message={message}\n                lastMessage={messages[lastMessageKey]}\n              />\n            )}\n          </div>\n          <div\n            className=\"read-receipts\"\n            style={{\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\n            }}\n          >\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  if (!chat) return <div />;\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: \"100px\" }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatFeed;\n","import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst projectID = \"cf332393-d6c4-4bae-9518-585df2b65349\";\n\nconst Modal = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const authObject = {\n      \"Project-ID\": projectID,\n      \"User-Name\": username,\n      \"User-Secret\": password,\n    };\n\n    try {\n      await axios.get(\"https://api.chatengine.io/chats\", {\n        headers: authObject,\n      });\n\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"password\", password);\n\n      window.location.reload();\n      setError(\"\");\n    } catch (err) {\n      setError(\"Oops, incorrect credentials.\");\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">Chat Application</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"input\"\n            placeholder=\"Username\"\n            required\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"input\"\n            placeholder=\"Password\"\n            required\n          />\n          <div align=\"center\">\n            <button type=\"submit\" className=\"button\">\n              <span>Start chatting</span>\n            </button>\n          </div>\n        </form>\n        <h1>{error}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { ChatEngine } from 'react-chat-engine';\n\nimport ChatFeed from './components/ChatFeed';\nimport LoginForm from './components/LoginForm';\n\nimport './App.css';\n\nconst projectID = \"cf332393-d6c4-4bae-9518-585df2b65349\";\n\nconst App = () => {\n    if (!localStorage.getItem('username')) return <LoginForm />;\n    return (\n        <ChatEngine\n            height=\"100vh\"\n            projectID={projectID}\n            userName={localStorage.getItem('username')}\n            userSecret={localStorage.getItem('password')}\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps}\n            />}\n            onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n        />\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}